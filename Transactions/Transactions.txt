A database transaction is a single unit of work that consists of one or more operations.

A PostgreSQL transaction is atomic, consistent, isolated, and durable. These properties are often referred to as ACID:

Atomicity guarantees that the transaction completes in an all-or-nothing manner.
Consistency ensures the change to data written to the database must be valid and follow predefined rules.
Isolation determines how transaction integrity is visible to other transactions.
Durability makes sure that transactions that have been committed will be stored in the database permanently.

//Creating Table
DROP TABLE accounts IF EXISTS;

CREATE TABLE accounts (
    id INT GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(100) NOT NULL,
    balance DEC(15,2) NOT NULL,
    PRIMARY KEY(id)
);

-- start a transaction
BEGIN;

-- insert a new row into the accounts table
INSERT INTO accounts(name,balance)
VALUES('Doe',30000);

-- commit the change (or roll it back later)
COMMIT;

if we commit , we cant rollback