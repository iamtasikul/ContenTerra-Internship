serial is the "old" implementation of auto-generated unique values
To be more compliant with the SQL standard, Postgres 10 introduced the syntax using generated as identity.

====================//GENERATED ALWAYS example
First, create a table named color with the color_id as the identity column:

CREATE TABLE color (
    color_id INT GENERATED ALWAYS AS IDENTITY,
    color_name VARCHAR NOT NULL
);

Second, insert a new row into the color table:

INSERT INTO color(color_name)
VALUES ('Red');


SELECT * FROM color;
//again Insert data

INSERT INTO color (color_id, color_name)
VALUES (2, 'Green');
Code language: SQL (Structured Query Language) (sql)
PostgreSQL issued the following error:

[Err] ERROR:  cannot insert into column "color_id"
DETAIL:  Column "color_id" is an identity column defined as GENERATED ALWAYS.
HINT:  Use OVERRIDING SYSTEM VALUE to override.
Code language: SQL (Structured Query Language) (sql)
To fix the error, you can use the OVERRIDING SYSTEM VALUE clause as follows:

INSERT INTO color (color_id, color_name)
OVERRIDING SYSTEM VALUE 
VALUES(2, 'Green');

=================//GENERATED BY DEFAULT AS IDENTITY
DROP TABLE color;

CREATE TABLE color (
    color_id INT GENERATED BY DEFAULT AS IDENTITY,
    color_name VARCHAR NOT NULL
);
Code language: SQL (Structured Query Language) (sql)
Second, insert a row into the color table:

INSERT INTO color (color_name)
VALUES ('White');
Code language: SQL (Structured Query Language) (sql)
It works as expected.

Third, insert another row with a value for the color_id column:

INSERT INTO color (color_id, color_name)
VALUES (2, 'Yellow');
Code language: SQL (Structured Query Language) (sql)
Unlike the previous example that uses the GENERATED ALWAYS AS IDENTITY constraint, the statement above works perfectly fine.

======//Adding an identity column to an existing table

CREATE TABLE shape (
    shape_id INT NOT NULL,
    shape_name VARCHAR NOT NULL
);

ALTER TABLE shape 
ALTER COLUMN shape_id ADD GENERATED ALWAYS AS IDENTITY;

//describe table in plsql
\d shape

//Changing an identity column
ALTER TABLE shape
ALTER COLUMN shape_id SET GENERATED BY DEFAULT;

//Removing the GENERATED AS IDENTITY constraint
ALTER TABLE shape
ALTER COLUMN shape_id
DROP IDENTITY IF EXISTS;